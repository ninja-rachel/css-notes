{
	"nodes":[
		{"id":"649d425db45a3923","x":-1125,"y":-1760,"width":3479,"height":1880,"type":"group","label":"Objects"},
		{"id":"73b6bb9df2caa5c1","x":-3469,"y":120,"width":1735,"height":1540,"type":"group","label":"function"},
		{"id":"4c4e8bd938997d19","x":-5977,"y":-160,"width":1650,"height":1360,"type":"group","label":"data type"},
		{"id":"57dab1478b638fc3","x":-3680,"y":-3120,"width":1218,"height":1001,"type":"group","label":"prototype"},
		{"id":"fd6e9af6c4d85156","x":-4996,"y":-1360,"width":1527,"height":792,"type":"group","label":"class"},
		{"id":"257eae7612adffd5","x":1007,"y":-1360,"width":302,"height":190,"type":"group","label":"property types"},
		{"id":"f229bbf916e6bc18","x":-5957,"y":113,"width":250,"height":207,"type":"text","text":"_Iterable_ objects are a generalization of arrays. That’s a concept that allows us to make any object useable in a `for..of` loop."},
		{"id":"a48dbdd27edf1cec","x":-5857,"y":460,"width":250,"height":60,"type":"text","text":"array method"},
		{"id":"d27cc27b42067ce4","x":-5577,"y":20,"width":250,"height":60,"color":"6","type":"text","text":"iterable"},
		{"id":"c45b25dfb0263b2b","x":-5416,"y":420,"width":168,"height":60,"color":"6","type":"text","text":"Array"},
		{"id":"3022d1e1b92a89d4","x":-5332,"y":623,"width":250,"height":60,"color":"6","type":"text","text":"Map"},
		{"id":"9d41b8a130f0d168","x":-5145,"y":1036,"width":250,"height":144,"type":"text","text":"A `Set` is a special type collection – “set of values” (without keys), where each value may occur only once."},
		{"id":"56ae6d042cc65d08","x":-5137,"y":517,"width":250,"height":60,"color":"6","type":"text","text":"Objects"},
		{"id":"bfe0cfa532a192e0","x":-5137,"y":796,"width":250,"height":50,"color":"6","type":"text","text":"Set"},
		{"id":"4dbaad65493628a2","x":-4647,"y":569,"width":250,"height":60,"type":"text","text":"symbol"},
		{"id":"9751ae3761781bfd","x":-5857,"y":640,"width":250,"height":242,"type":"text","text":" we need an _ordered collection_, where we have a 1st, a 2nd, a 3rd element and so on. For example, we need that to store a list of something: users, goods, HTML elements etc.\n "},
		{"id":"dc13550a5b877674","x":-4657,"y":800,"width":250,"height":60,"type":"text","text":"undefines"},
		{"id":"f888ad545c8d8eb0","x":-5498,"y":860,"width":250,"height":186,"type":"text","text":"Map is a collection of keyed data items, just like an `Object`. But the main difference is that `Map` allows keys of any type."},
		{"id":"525973a32678cf9a","x":-5177,"y":272,"width":250,"height":60,"color":"6","type":"text","text":"primitive"},
		{"id":"7f11178b10f18830","x":-4877,"y":893,"width":250,"height":60,"color":"6","type":"text","text":"destructuring"},
		{"id":"2274ddf99ea94631","x":-4644,"y":433,"width":250,"height":60,"type":"text","text":"boolean"},
		{"id":"5f4f49b995e997c7","x":-4597,"y":16,"width":250,"height":60,"type":"text","text":"string "},
		{"id":"13bb7b2b435d3d0f","x":-4638,"y":677,"width":250,"height":60,"type":"text","text":"null"},
		{"id":"a42b0956bedaaf84","x":-4627,"y":218,"width":250,"height":60,"type":"text","text":"numbers"},
		{"id":"e453beefc30e886f","x":-4597,"y":340,"width":250,"height":60,"type":"text","text":"bigint "},
		{"type":"text","text":"global symbol","id":"24b54917ed200392","x":-745,"y":-1164,"width":250,"height":60},
		{"type":"text","text":"-   symbol type","id":"94ab80ca87dbc70e","x":-373,"y":-1086,"width":250,"height":60,"color":"5"},
		{"type":"text","text":"Symbols allow us to create “hidden” properties of an object, that no other part of code can accidentally access or overwrite.","id":"43a7785e4938c9a5","x":-1105,"y":-1051,"width":250,"height":191},
		{"type":"text","text":"\"hidden \" properties","id":"ec10e5834214c42d","x":-747,"y":-1048,"width":250,"height":60},
		{"type":"text","text":"[[object properties]]","id":"240e671ef7ef6098","x":774,"y":-944,"width":250,"height":60,"color":"3"},
		{"type":"text","text":"constructor","id":"01ba81b414bf8a51","x":1107,"y":-480,"width":250,"height":74,"color":"3"},
		{"type":"text","text":"[[this in methods]] ","id":"b1547938815e737b","x":1799,"y":-1140,"width":250,"height":60},
		{"type":"text","text":"object  reference and copy","id":"abe455bfb88f5c0c","x":1959,"y":-920,"width":250,"height":60},
		{"id":"16b73f1278094403","x":2075,"y":-620,"width":250,"height":60,"type":"text","text":"Symbol.toPrimitive"},
		{"id":"fc3ab838dca048f7","x":2075,"y":-466,"width":250,"height":60,"type":"text","text":"toString "},
		{"id":"0a429490fe3252b8","x":2084,"y":-360,"width":250,"height":60,"type":"text","text":"valueOf"},
		{"id":"efc10656c7fcbc04","x":1394,"y":-1290,"width":250,"height":60,"type":"text","text":"get"},
		{"id":"4c8685cb479e1381","x":1690,"y":-620,"width":336,"height":62,"color":"3","type":"text","text":"Object to primitive **conversion**"},
		{"type":"text","text":"enumerable","id":"d05c0b2200d46060","x":1359,"y":-1190,"width":250,"height":60},
		{"id":"279e52ed970659d5","x":1027,"y":-1336,"width":250,"height":60,"type":"text","text":"data properties "},
		{"id":"71f413a382c265ae","x":1027,"y":-1250,"width":250,"height":60,"type":"text","text":"accessor property"},
		{"type":"text","text":"configurable","id":"f13757cb7f28127c","x":1292,"y":-1080,"width":250,"height":60},
		{"type":"text","text":"set","id":"78e96ef211690731","x":1394,"y":-1396,"width":250,"height":60},
		{"type":"text","text":"By specification, only two primitive types may serve as *object property keys*:\n\n-   string type, or\n-   symbol type.","id":"ef4e7daa690be2e9","x":-192,"y":-1400,"width":250,"height":195},
		{"type":"text","text":"object property keys","id":"3f5054b37d3f5c22","x":207,"y":-1182,"width":250,"height":59},
		{"type":"text","text":"-   string type,","id":"b536d6e6fced6064","x":32,"y":-1040,"width":250,"height":60},
		{"type":"text","text":"The optional chaining `?.` is a safe way to *access nested object properties*, even if an intermediate property doesn’t exist.","id":"7f311076acbce1f3","x":-67,"y":-861,"width":250,"height":182},
		{"id":"2db159bfeda32642","x":347,"y":-720,"width":250,"height":60,"type":"text","text":"property attributes (flags)"},
		{"id":"c19123acae675603","x":287,"y":-1600,"width":430,"height":98,"type":"text","text":"properties into `{...}` as “key: value” pairs:\n\nproperties = key:value\n"},
		{"type":"text","text":"Optional chaining '?.'","id":"9d72c38c37d5b3d6","x":377,"y":-911,"width":250,"height":50,"color":"5"},
		{"id":"94b5b8bb9789d2f4","x":411,"y":-558,"width":250,"height":60,"type":"text","text":"enumerable"},
		{"id":"674f9c556f54bebe","x":767,"y":-510,"width":250,"height":60,"type":"text","text":"configurable"},
		{"id":"c156d0a06676fb73","x":308,"y":-406,"width":250,"height":106,"type":"text","text":"if `true`, then listed in loops, otherwise not listed."},
		{"id":"b831a19627ff6f28","x":-128,"y":-323,"width":250,"height":103,"type":"text","text":"if `true`, the value can be changed, otherwise it’s read-only."},
		{"id":"be7757e3acb48200","x":685,"y":-259,"width":339,"height":110,"type":"text","text":"if `true`, the property can be deleted and these attributes can be modified, otherwise not."},
		{"id":"624c300f8913051a","x":-113,"y":-498,"width":250,"height":60,"type":"text","text":"writable"},
		{"type":"text","text":"[[object method]]","id":"79a2dba90ea18f69","x":1527,"y":-920,"width":163,"height":60,"color":"3"},
		{"type":"text","text":"object","id":"265fb4f5152d6a2d","x":1167,"y":-780,"width":250,"height":60,"color":"4"},
		{"type":"text","text":"The regular `{...}` syntax allows us to create one object. But often we need to create many similar objects, like multiple users or menu items and so on.\n\nThat can be done using constructor functions and the `\"new\"` operator.","id":"bed70fd6712c340e","x":1167,"y":-320,"width":250,"height":342},
		{"id":"c23fce0c235d8c50","x":1529,"y":-320,"width":250,"height":60,"type":"text","text":"new (operator) ?"},
		{"id":"5eb77cbfdd7e9fa9","x":-2886,"y":1099,"width":250,"height":60,"color":"6","type":"text","text":"arrow functions"},
		{"id":"b11f9300df4678ba","x":-2670,"y":1240,"width":250,"height":60,"color":"6","type":"text","text":"function binding "},
		{"id":"bd1459589e010b78","x":-2545,"y":1078,"width":250,"height":60,"color":"6","type":"text","text":"function "},
		{"id":"302f397c17bec81b","x":-2466,"y":1580,"width":250,"height":60,"type":"text","text":"a wrapper"},
		{"id":"a7e5f16d15cd3ad5","x":-3247,"y":856,"width":250,"height":60,"type":"text","text":"do not have [[this]]"},
		{"id":"2e27831e7ca9f5ee","x":-2534,"y":632,"width":250,"height":88,"type":"text","text":"Function objects contain some useable properties."},
		{"id":"8e1cb5de23161ea6","x":-2533,"y":826,"width":250,"height":60,"type":"text","text":"function are objects"},
		{"id":"f35ed74b5499a36d","x":-2090,"y":634,"width":250,"height":60,"type":"text","text":"length property"},
		{"id":"2d4504d03b22ca67","x":-2079,"y":737,"width":250,"height":60,"type":"text","text":"custom property"},
		{"id":"a68b301150503844","x":-3334,"y":960,"width":250,"height":60,"type":"text","text":"do not have [[arguments]]"},
		{"id":"bd99deca3edd1ca1","x":-3449,"y":1109,"width":296,"height":50,"type":"text","text":"can not be called with new"},
		{"id":"820dad7e1e0e3529","x":-3334,"y":1211,"width":250,"height":60,"type":"text","text":"do not have super"},
		{"id":"0ccd777675594e08","x":-2997,"y":1414,"width":250,"height":60,"color":"1","type":"text","text":"losing \"this\" problem"},
		{"id":"8ba9078d6cda9f6b","x":-2194,"y":140,"width":440,"height":320,"type":"text","text":"A property assigned to a function like `sayHi.counter = 0` does _not_ define a local variable `counter` inside it. In other words, a property `counter` and a variable `let counter` are two unrelated things.\n\nWe can treat a function as an object, store properties in it, but that has no effect on its execution. Variables are not function properties and vice versa. These are just parallel worlds."},
		{"id":"480fbaf6849a1f63","x":-2533,"y":436,"width":250,"height":60,"color":"1","type":"text","text":"A property is not a variable"},
		{"id":"7013d92d6cc6408b","x":-2156,"y":496,"width":250,"height":60,"type":"text","text":"name property"},
		{"id":"ac1a058ad485df64","x":-4608,"y":-1340,"width":250,"height":174,"type":"text","text":"The `instanceof` operator allows to check whether an object belongs to a certain class. It also takes inheritance into account."},
		{"id":"40dd79240f1ebc8c","x":-4482,"y":-1073,"width":250,"height":60,"type":"text","text":"Class checking: \"instanceof\""},
		{"id":"d27fe03897a58345","x":-4569,"y":-853,"width":250,"height":60,"type":"text","text":"extend built-in classes"},
		{"id":"b75599b5e91e9f8b","x":-4976,"y":-852,"width":250,"height":152,"type":"text","text":"Built-in classes like Array, Map and others are extendable also."},
		{"id":"ea3dce854df45bf9","x":-4401,"y":-648,"width":250,"height":60,"type":"text","text":"Private and protected properties and methods"},
		{"id":"b4bd8495f9b8141a","x":-4191,"y":-1020,"width":250,"height":60,"type":"text","text":"a class is a kind of function."},
		{"id":"94714521698fb7eb","x":-4159,"y":-853,"width":250,"height":60,"color":"6","type":"text","text":"class"},
		{"id":"e456a83f27e804b8","x":-4066,"y":-648,"width":250,"height":60,"type":"text","text":"static properties and methods"},
		{"id":"d1331fd4eadb2f4e","x":-3779,"y":-878,"width":250,"height":60,"type":"text","text":"basic syntax"},
		{"id":"66ba0305fa03b7fb","x":-3489,"y":-2677,"width":250,"height":60,"color":"3","type":"text","text":"objects without `__proto__`"},
		{"id":"38dc3b900a5eabea","x":-3077,"y":-2517,"width":250,"height":60,"type":"text","text":"prototype object"},
		{"id":"4d8b2d0b9626e998","x":-3020,"y":-2199,"width":250,"height":60,"type":"text","text":"object"},
		{"id":"88cfc95d323a6cc4","x":-3092,"y":-2783,"width":250,"height":60,"color":"6","type":"text","text":"prototype"},
		{"id":"8ce06bd2d7f769b0","x":-3614,"y":-3100,"width":250,"height":60,"type":"text","text":"object.prototype"},
		{"id":"ce4d37899c342602","x":-3244,"y":-3052,"width":250,"height":60,"color":"3","type":"text","text":"native prototype"},
		{"id":"11f525c869463f57","x":-3660,"y":-3000,"width":250,"height":60,"type":"text","text":"built-in prototype"},
		{"id":"6b1c26d049cfaf4e","x":-2877,"y":-2992,"width":250,"height":60,"type":"text","text":"F.prototype"},
		{"id":"3da8d4ce380464b6","x":-2732,"y":-2786,"width":250,"height":60,"type":"text","text":"prototype methods"}
	],
	"edges":[
		{"id":"245f9af00c3981c3","fromNode":"265fb4f5152d6a2d","fromSide":"bottom","toNode":"01ba81b414bf8a51","toSide":"top","color":"5","label":"create many similar objects"},
		{"id":"e7b91fe41153174c","fromNode":"9d72c38c37d5b3d6","fromSide":"right","toNode":"240e671ef7ef6098","toSide":"left"},
		{"id":"0672d742a0af6f78","fromNode":"9d72c38c37d5b3d6","fromSide":"left","toNode":"7f311076acbce1f3","toSide":"right"},
		{"id":"3b549041ad2d97f5","fromNode":"240e671ef7ef6098","fromSide":"right","toNode":"265fb4f5152d6a2d","toSide":"left","color":"6"},
		{"id":"2f80ecc6d2daa40c","fromNode":"240e671ef7ef6098","fromSide":"left","toNode":"3f5054b37d3f5c22","toSide":"right"},
		{"id":"c077cc5a133e60d0","fromNode":"3f5054b37d3f5c22","fromSide":"left","toNode":"ef4e7daa690be2e9","toSide":"right"},
		{"id":"98bcec203242a62c","fromNode":"ef4e7daa690be2e9","fromSide":"bottom","toNode":"94ab80ca87dbc70e","toSide":"top"},
		{"id":"71e23c3f7c6a281a","fromNode":"ef4e7daa690be2e9","fromSide":"bottom","toNode":"b536d6e6fced6064","toSide":"top"},
		{"id":"93d4df1df0273281","fromNode":"94ab80ca87dbc70e","fromSide":"left","toNode":"24b54917ed200392","toSide":"right"},
		{"id":"aad63e33677b95c1","fromNode":"94ab80ca87dbc70e","fromSide":"left","toNode":"ec10e5834214c42d","toSide":"right"},
		{"id":"4e304d0e9ac927e0","fromNode":"ec10e5834214c42d","fromSide":"left","toNode":"43a7785e4938c9a5","toSide":"right"},
		{"id":"4485eca084595fe4","fromNode":"79a2dba90ea18f69","fromSide":"bottom","toNode":"265fb4f5152d6a2d","toSide":"right","color":"5"},
		{"id":"9df9750b46a54731","fromNode":"b1547938815e737b","fromSide":"left","toNode":"79a2dba90ea18f69","toSide":"top"},
		{"id":"58d7c4942f46d764","fromNode":"79a2dba90ea18f69","fromSide":"right","toNode":"abe455bfb88f5c0c","toSide":"left"},
		{"id":"8c67554a0b038271","fromNode":"c19123acae675603","fromSide":"bottom","toNode":"240e671ef7ef6098","toSide":"top"},
		{"id":"5536e092f9f1796f","fromNode":"c19123acae675603","fromSide":"left","toNode":"3f5054b37d3f5c22","toSide":"right"},
		{"id":"ce8184500b1be1f0","fromNode":"265fb4f5152d6a2d","fromSide":"bottom","toNode":"4c8685cb479e1381","toSide":"left","color":"5"},
		{"id":"e95d339ee008ff5b","fromNode":"4c8685cb479e1381","fromSide":"right","toNode":"16b73f1278094403","toSide":"left"},
		{"id":"f9f95223bc7e897c","fromNode":"4c8685cb479e1381","fromSide":"right","toNode":"fc3ab838dca048f7","toSide":"left"},
		{"id":"04346ae4e66852dd","fromNode":"4c8685cb479e1381","fromSide":"right","toNode":"0a429490fe3252b8","toSide":"left"},
		{"id":"5aba71c1c18595e6","fromNode":"525973a32678cf9a","fromSide":"right","toNode":"5f4f49b995e997c7","toSide":"left"},
		{"id":"991058880bf08346","fromNode":"525973a32678cf9a","fromSide":"right","toNode":"a42b0956bedaaf84","toSide":"left"},
		{"id":"2b888a9919fdb476","fromNode":"525973a32678cf9a","fromSide":"right","toNode":"e453beefc30e886f","toSide":"left"},
		{"id":"aab598cb410da00a","fromNode":"525973a32678cf9a","fromSide":"right","toNode":"2274ddf99ea94631","toSide":"left"},
		{"id":"565ec623cfba29f1","fromNode":"525973a32678cf9a","fromSide":"right","toNode":"4dbaad65493628a2","toSide":"left"},
		{"id":"4404f816c30f34bc","fromNode":"525973a32678cf9a","fromSide":"right","toNode":"13bb7b2b435d3d0f","toSide":"left"},
		{"id":"e496918f129eb467","fromNode":"525973a32678cf9a","fromSide":"right","toNode":"dc13550a5b877674","toSide":"left"},
		{"id":"0e9db75a36d5f8c4","fromNode":"c45b25dfb0263b2b","fromSide":"bottom","toNode":"9751ae3761781bfd","toSide":"top"},
		{"id":"ab6acff4c0c898f9","fromNode":"c45b25dfb0263b2b","fromSide":"left","toNode":"a48dbdd27edf1cec","toSide":"right"},
		{"id":"0b2ed8d163ef6dbf","fromNode":"d27cc27b42067ce4","fromSide":"bottom","toNode":"c45b25dfb0263b2b","toSide":"top","color":"5","label":"arrays are build in iterables"},
		{"id":"e3f9c653f32bb2aa","fromNode":"d27cc27b42067ce4","fromSide":"left","toNode":"f229bbf916e6bc18","toSide":"right"},
		{"id":"433e245965d8c334","fromNode":"5f4f49b995e997c7","fromSide":"top","toNode":"d27cc27b42067ce4","toSide":"top","label":"string is iterable"},
		{"id":"fc884b153cd49c4e","fromNode":"3022d1e1b92a89d4","fromSide":"bottom","toNode":"f888ad545c8d8eb0","toSide":"top"},
		{"id":"5c898d2e403df2d6","fromNode":"bfe0cfa532a192e0","fromSide":"bottom","toNode":"9d41b8a130f0d168","toSide":"top"},
		{"id":"3b79626f0efea872","fromNode":"bd1459589e010b78","fromSide":"top","toNode":"8e1cb5de23161ea6","toSide":"bottom"},
		{"id":"d9b8b097ebaf45ff","fromNode":"8e1cb5de23161ea6","fromSide":"top","toNode":"2e27831e7ca9f5ee","toSide":"bottom"},
		{"id":"6e2e24251cd9273d","fromNode":"2e27831e7ca9f5ee","fromSide":"right","toNode":"7013d92d6cc6408b","toSide":"left"},
		{"id":"37ebc314e3f15124","fromNode":"2e27831e7ca9f5ee","fromSide":"right","toNode":"f35ed74b5499a36d","toSide":"left"},
		{"id":"2a9f7193c4bd5ca9","fromNode":"2e27831e7ca9f5ee","fromSide":"right","toNode":"2d4504d03b22ca67","toSide":"left"},
		{"id":"17940d9080c08b30","fromNode":"480fbaf6849a1f63","fromSide":"right","toNode":"8ba9078d6cda9f6b","toSide":"left"},
		{"id":"3acbdcd1efe21e6a","fromNode":"0ccd777675594e08","fromSide":"right","toNode":"b11f9300df4678ba","toSide":"left","label":"solution 1"},
		{"id":"7206907d6409936d","fromNode":"0ccd777675594e08","fromSide":"right","toNode":"302f397c17bec81b","toSide":"left","label":"solution 2"},
		{"id":"2c92d350c74d9e48","fromNode":"5eb77cbfdd7e9fa9","fromSide":"left","toNode":"a7e5f16d15cd3ad5","toSide":"right"},
		{"id":"97605c909c96751e","fromNode":"5eb77cbfdd7e9fa9","fromSide":"left","toNode":"a68b301150503844","toSide":"right"},
		{"id":"c26c8808388428ad","fromNode":"5eb77cbfdd7e9fa9","fromSide":"left","toNode":"bd99deca3edd1ca1","toSide":"right"},
		{"id":"494a000139688148","fromNode":"5eb77cbfdd7e9fa9","fromSide":"left","toNode":"820dad7e1e0e3529","toSide":"right"},
		{"id":"54ff915b8fed6cf9","fromNode":"240e671ef7ef6098","fromSide":"left","toNode":"2db159bfeda32642","toSide":"right"},
		{"id":"bccb531ec1c449d4","fromNode":"2db159bfeda32642","fromSide":"bottom","toNode":"624c300f8913051a","toSide":"top"},
		{"id":"565a763c38cb4c12","fromNode":"2db159bfeda32642","fromSide":"bottom","toNode":"94b5b8bb9789d2f4","toSide":"top"},
		{"id":"ccd91333d1edbca6","fromNode":"2db159bfeda32642","fromSide":"bottom","toNode":"674f9c556f54bebe","toSide":"top"},
		{"id":"1d5b4c5314b69b46","fromNode":"94b5b8bb9789d2f4","fromSide":"bottom","toNode":"c156d0a06676fb73","toSide":"top"},
		{"id":"9f329d0fd960fc2b","fromNode":"674f9c556f54bebe","fromSide":"bottom","toNode":"be7757e3acb48200","toSide":"top"},
		{"id":"f21ceb29d8a4f2d5","fromNode":"01ba81b414bf8a51","fromSide":"bottom","toNode":"bed70fd6712c340e","toSide":"top"},
		{"id":"7ccd28c4fea2b309","fromNode":"bed70fd6712c340e","fromSide":"right","toNode":"c23fce0c235d8c50","toSide":"bottom"},
		{"id":"94ad5c9667848284","fromNode":"c23fce0c235d8c50","fromSide":"top","toNode":"01ba81b414bf8a51","toSide":"right"},
		{"id":"2b7fdeee5bd7dc38","fromNode":"624c300f8913051a","fromSide":"bottom","toNode":"b831a19627ff6f28","toSide":"top"},
		{"id":"503c2eefe3bcadb4","fromNode":"257eae7612adffd5","fromSide":"left","toNode":"240e671ef7ef6098","toSide":"top"},
		{"id":"a4dd94bedc4eafd8","fromNode":"71f413a382c265ae","fromSide":"right","toNode":"efc10656c7fcbc04","toSide":"left"},
		{"id":"afb0eea7477270f1","fromNode":"71f413a382c265ae","fromSide":"right","toNode":"d05c0b2200d46060","toSide":"left"},
		{"id":"617deff74b4c6dfc","fromNode":"71f413a382c265ae","fromSide":"right","toNode":"f13757cb7f28127c","toSide":"left"},
		{"id":"cad3d3a59ca5fe12","fromNode":"71f413a382c265ae","fromSide":"right","toNode":"78e96ef211690731","toSide":"left"},
		{"id":"bf5d14f82ec74129","fromNode":"4d8b2d0b9626e998","fromSide":"top","toNode":"38dc3b900a5eabea","toSide":"bottom","color":"4","label":"[[Prototype]]"},
		{"id":"0e055e6f4007131a","fromNode":"88cfc95d323a6cc4","fromSide":"bottom","toNode":"38dc3b900a5eabea","toSide":"top"},
		{"id":"c5f3ac380c58bb93","fromNode":"88cfc95d323a6cc4","fromSide":"top","toNode":"6b1c26d049cfaf4e","toSide":"bottom"},
		{"id":"af7e5d6f12a92fd4","fromNode":"88cfc95d323a6cc4","fromSide":"top","toNode":"ce4d37899c342602","toSide":"bottom"},
		{"id":"4f261f50a8b0d656","fromNode":"ce4d37899c342602","fromSide":"left","toNode":"8ce06bd2d7f769b0","toSide":"right"},
		{"id":"083b22360a77c801","fromNode":"ce4d37899c342602","fromSide":"left","toNode":"11f525c869463f57","toSide":"right"},
		{"id":"727b77acaa3b00d8","fromNode":"88cfc95d323a6cc4","fromSide":"right","toNode":"3da8d4ce380464b6","toSide":"left"},
		{"id":"37125ae9f6b0e39c","fromNode":"88cfc95d323a6cc4","fromSide":"left","toNode":"66ba0305fa03b7fb","toSide":"right"},
		{"id":"c6fbe5b78f34818d","fromNode":"b4bd8495f9b8141a","fromSide":"bottom","toNode":"94714521698fb7eb","toSide":"top"},
		{"id":"159684663591ba22","fromNode":"94714521698fb7eb","fromSide":"right","toNode":"d1331fd4eadb2f4e","toSide":"left"},
		{"id":"544410459a5519e2","fromNode":"94714521698fb7eb","fromSide":"bottom","toNode":"e456a83f27e804b8","toSide":"top"},
		{"id":"30ce9251eb22873f","fromNode":"94714521698fb7eb","fromSide":"bottom","toNode":"ea3dce854df45bf9","toSide":"top"},
		{"id":"f2b5e28511272c4e","fromNode":"94714521698fb7eb","fromSide":"left","toNode":"d27fe03897a58345","toSide":"right"},
		{"id":"df0cae2d22d53a05","fromNode":"d27fe03897a58345","fromSide":"left","toNode":"b75599b5e91e9f8b","toSide":"right"},
		{"id":"5919fde32ea1c1c8","fromNode":"94714521698fb7eb","fromSide":"top","toNode":"40dd79240f1ebc8c","toSide":"bottom"},
		{"id":"4dfe6b3b1bf72f38","fromNode":"40dd79240f1ebc8c","fromSide":"top","toNode":"ac1a058ad485df64","toSide":"bottom"}
	]
}